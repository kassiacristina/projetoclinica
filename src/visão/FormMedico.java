/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modeloConection.ConexaoBD;
import modeloDao.DaoMedico;
import modeloBeans.BeansMedico;
import modeloBeans.ModeloTabelas;

/**
 *
 * @author Bruno
 */
public class FormMedico extends javax.swing.JFrame {

    BeansMedico mod = new BeansMedico();
    DaoMedico control = new DaoMedico();
    ConexaoBD conex = new ConexaoBD();
    int flag = 0;
    
    
    /**
     * Creates new form FormMedico
     */
    public FormMedico() {
        initComponents();
        preencherTabela("select * from medico order by  nome_medico asc");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Especialista = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvarM = new javax.swing.JButton();
        jButtonCancelarM = new javax.swing.JButton();
        jButtonEditarM = new javax.swing.JButton();
        jButtonExcluirM = new javax.swing.JButton();
        jComboBoxEsp = new javax.swing.JComboBox<>();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jFormattedCrm = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jTcod = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableMedicos = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        Especialista.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Especialista.setEnabled(false);

        jLabel2.setText("Nome:");

        jLabel3.setText("Crm:");

        jLabel4.setText("Especialização:");

        jTextFieldNome.setEnabled(false);

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvarM.setText("Salvar");
        jButtonSalvarM.setEnabled(false);
        jButtonSalvarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarMActionPerformed(evt);
            }
        });

        jButtonCancelarM.setText("Cancelar");
        jButtonCancelarM.setEnabled(false);
        jButtonCancelarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarMActionPerformed(evt);
            }
        });

        jButtonEditarM.setText("Editar");
        jButtonEditarM.setEnabled(false);
        jButtonEditarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarMActionPerformed(evt);
            }
        });

        jButtonExcluirM.setText("Excluir");
        jButtonExcluirM.setEnabled(false);
        jButtonExcluirM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirMActionPerformed(evt);
            }
        });

        jComboBoxEsp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cirurgião", "Anestesista", "Pediatra", "Ginicologista", "Obstetra", "Neurologista", "Urologista", "Clinico Geral", "Manja dos Paranaue", " " }));
        jComboBoxEsp.setEnabled(false);
        jComboBoxEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEspActionPerformed(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jFormattedCrm.setEnabled(false);

        jLabel6.setText("ID:");

        jTcod.setEnabled(false);

        jTableMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableMedicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMedicosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableMedicos);

        jLabel7.setFont(new java.awt.Font("Kristen ITC", 3, 14)); // NOI18N
        jLabel7.setText("Medicos ja cadastrados ");

        jLabel8.setFont(new java.awt.Font("Kristen ITC", 3, 12)); // NOI18N
        jLabel8.setText("Pesquisar registro: ");

        javax.swing.GroupLayout EspecialistaLayout = new javax.swing.GroupLayout(Especialista);
        Especialista.setLayout(EspecialistaLayout);
        EspecialistaLayout.setHorizontalGroup(
            EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EspecialistaLayout.createSequentialGroup()
                .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(EspecialistaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonCancelarM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonNovo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                            .addComponent(jButtonSalvarM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonExcluirM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEditarM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EspecialistaLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EspecialistaLayout.createSequentialGroup()
                                .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(EspecialistaLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldNome))
                                    .addGroup(EspecialistaLayout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel7))
                                    .addGroup(EspecialistaLayout.createSequentialGroup()
                                        .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel6))
                                        .addGap(26, 26, 26)
                                        .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(EspecialistaLayout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTcod, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(EspecialistaLayout.createSequentialGroup()
                                                .addComponent(jFormattedCrm, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(EspecialistaLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        EspecialistaLayout.setVerticalGroup(
            EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EspecialistaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvarM)
                    .addComponent(jFormattedCrm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(2, 2, 2)
                .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelarM)
                    .addComponent(jTcod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EspecialistaLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButtonExcluirM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditarM))
                    .addGroup(EspecialistaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EspecialistaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonPesquisar)
                            .addGroup(EspecialistaLayout.createSequentialGroup()
                                .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                                .addGap(3, 3, 3)))
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(Especialista);
        Especialista.setBounds(20, 30, 560, 380);

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastro de Medicos");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(90, 10, 380, 24);

        setSize(new java.awt.Dimension(609, 458));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        mod.setPesquisa(jTextFieldPesquisa.getText());
        BeansMedico model = control.buscaM(mod);
        jTextFieldNome.setText(model.getNome());
        jTcod.setText(String.valueOf(model.getCodigo()));
        jFormattedCrm.setText(String.valueOf(model.getCrm()));
        jComboBoxEsp.setSelectedItem(model.getEspecialidade());

        jButtonEditarM.setEnabled(true);
        jButtonExcluirM.setEnabled(true);
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonExcluirMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirMActionPerformed
        int resposta=0;
        resposta= JOptionPane.showConfirmDialog(rootPane,"deseja realmente excluir");
        if(resposta==JOptionPane.YES_OPTION){
            mod.setCodigo(Integer.parseInt(jTcod.getText()));/*seta o objeto que esta na tela */
            control.Excluir(mod);/*chama o metodo excluir*/
            jTcod.setText("");
            jTextFieldNome.setText("");
            jFormattedCrm.setText("");
            jTextFieldNome.setEnabled(false);
            jFormattedCrm.setEnabled(false);
            jComboBoxEsp.setEnabled(false);
            jButtonSalvarM.setEnabled(false);
            jButtonCancelarM.setEnabled(false);
            jButtonExcluirM.setEnabled(false);
            jButtonEditarM.setEnabled(false);
            preencherTabela("select * from medico order by  nome_medico asc");
        }

    }//GEN-LAST:event_jButtonExcluirMActionPerformed

    private void jButtonEditarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarMActionPerformed
        flag=2;
        jTextFieldNome.setEnabled(true);
        jFormattedCrm.setEnabled(true);
        jComboBoxEsp.setEnabled(true);
        jButtonSalvarM.setEnabled(true);
        jButtonCancelarM.setEnabled(true);
        jButtonEditarM.setEnabled(false);
        jButtonNovo.setEnabled(false);
        jButtonExcluirM.setEnabled(false);
    }//GEN-LAST:event_jButtonEditarMActionPerformed

    private void jButtonCancelarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarMActionPerformed
        jTextFieldNome.setEnabled(!true);
        jFormattedCrm.setEnabled(!true);
        jComboBoxEsp.setEnabled(!true);
        jButtonSalvarM.setEnabled(!true);
        jButtonCancelarM.setEnabled(!true);
        jButtonEditarM.setEnabled(false);
        jButtonExcluirM.setEnabled(false);
        jTextFieldNome.setText("");
        jFormattedCrm.setText("");
        jButtonPesquisar.setEnabled(true);
    }//GEN-LAST:event_jButtonCancelarMActionPerformed

    private void jButtonSalvarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarMActionPerformed
        if (flag==1){
            mod.setNome(jTextFieldNome.getText());/*modelo seta dentro de nome o valor do campo jtex*/
            mod.setEspecialidade((String) jComboBoxEsp.getSelectedItem());/*seta dentro do modelo a seleção do combobox e bota como string*/
            mod.setCrm(Integer.parseInt(jFormattedCrm.getText()));/*chama o valor de crm formatado para o metodo transformando em inteiro*/
            control.Salvar(mod);
            jTextFieldNome.setText("");
            jFormattedCrm.setText("");
            jTextFieldNome.setEnabled(false);
            jFormattedCrm.setEnabled(false);
            jComboBoxEsp.setEnabled(false);
            jButtonSalvarM.setEnabled(false);
            jButtonCancelarM.setEnabled(false);
            jButtonExcluirM.setEnabled(false);
            jButtonEditarM.setEnabled(false);
            jButtonNovo.setEnabled(true);
            jButtonPesquisar.setEnabled(true);
            preencherTabela("select * from medico order by  nome_medico asc");
        }else{
            mod.setCodigo(Integer.parseInt(jTcod.getText()));
            mod.setNome(jTextFieldNome.getText());
            mod.setEspecialidade((String)jComboBoxEsp.getSelectedItem());
            mod.setCrm(Integer.parseInt(jFormattedCrm.getText()));
            control.Editar(mod);
            jTextFieldNome.setText("");
            jFormattedCrm.setText("");
            jTextFieldNome.setEnabled(false);
            jFormattedCrm.setEnabled(false);
            jComboBoxEsp.setEnabled(false);
            jButtonSalvarM.setEnabled(false);
            jButtonCancelarM.setEnabled(false);
            jButtonExcluirM.setEnabled(false);
            jButtonEditarM.setEnabled(false);
            jButtonNovo.setEnabled(true);
            jButtonPesquisar.setEnabled(true);
            preencherTabela("select * from medico order by  nome_medico asc");
        }
    }//GEN-LAST:event_jButtonSalvarMActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        flag=1;
        jTextFieldNome.setEnabled(true);
        jFormattedCrm.setEnabled(true);
        jComboBoxEsp.setEnabled(true);
        jButtonSalvarM.setEnabled(true);
        jButtonCancelarM.setEnabled(true);
        jButtonPesquisar.setEnabled(false);
       
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jTableMedicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMedicosMouseClicked
        /*metodo para peencher campos com clique do mouse*/
        /*obs "'" = concatenar */
       String nome_medico=""+jTableMedicos.getValueAt(jTableMedicos.getSelectedRow(),1);
       conex.conexao();
       conex.executaSql("select * from medico where nome_medico='"+nome_medico+"'");
        try {
            conex.rs.first();
            jTcod.setText(String.valueOf(conex.rs.getInt("id_medico")));
            jTextFieldNome.setText(conex.rs.getString("nome_medico"));
            jComboBoxEsp.setSelectedItem(conex.rs.getString("especialidade"));
            jFormattedCrm.setText(conex.rs.getString("crm"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "erro ao selecionar os dados "+ex);
        }
       conex.desconecta();
       jButtonEditarM.setEnabled(true);
       jButtonExcluirM.setEnabled(true);
    }//GEN-LAST:event_jTableMedicosMouseClicked

    private void jComboBoxEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEspActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEspActionPerformed
public void preencherTabela(String Sql){/*metodo para preenxer tabela */
    ArrayList dados = new ArrayList();
    String[] colunas = new String[]{"ID","Nome","Especialidade","Crm"};
    conex.conexao();
    conex.executaSql(Sql);
    
    try{
       conex.rs.first();/*seta o primeiro registro*/
       do{
           dados.add(new Object[]{conex.rs.getInt("id_medico"),conex.rs.getString("nome_medico"),conex.rs.getString("especialidade"),conex.rs.getInt("crm")});
       /*vai adicionar a dados ou seja vai fazer a linha pois e a array list*/
       }while(conex.rs.next());
        
    }catch(SQLException ex){
        JOptionPane.showMessageDialog(rootPane, "Erro ao preencher ArrayList"+ex);
    }
     ModeloTabelas modelo = new ModeloTabelas(dados,colunas);  
     
    jTableMedicos.setModel(modelo);
    jTableMedicos.getColumnModel().getColumn(0).setPreferredWidth(85);/*define o damanho da tabela SetPrefe. 0 = primeiro registro..*/
    jTableMedicos.getColumnModel().getColumn(0).setResizable(false);/*usuario nao pode aumentar o tamanho da coluna com mouse*/
    jTableMedicos.getColumnModel().getColumn(1).setPreferredWidth(182);/*define o damanho da tabela SetPrefe. 1 = segundo registro..*/
    jTableMedicos.getColumnModel().getColumn(1).setResizable(false);/*usuario nao pode aumentar o tamanho da coluna com mouse*/ 
    jTableMedicos.getColumnModel().getColumn(2).setPreferredWidth(125);/*define o damanho da tabela SetPrefe. 2 = terceiro registro..*/
    jTableMedicos.getColumnModel().getColumn(2).setResizable(false);/*usuario nao pode aumentar o tamanho da coluna com mouse*/
    jTableMedicos.getColumnModel().getColumn(3).setPreferredWidth(105);/*define o damanho da tabela SetPrefe. 3 = quarto registro..*/
    jTableMedicos.getColumnModel().getColumn(3).setResizable(false);/*usuario nao pode aumentar o tamanho da coluna com mouse*/
    jTableMedicos.getTableHeader().setReorderingAllowed(false);/*cabeçalho nao podera ser reordenada*/
    jTableMedicos.setAutoResizeMode(jTableMedicos.AUTO_RESIZE_OFF);/*tabela nao podera ser redimencionada */
    jTableMedicos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);/*so podera selecionar um dado ou seja selecionar 1 campo por vez */
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Especialista;
    private javax.swing.JButton jButtonCancelarM;
    private javax.swing.JButton jButtonEditarM;
    private javax.swing.JButton jButtonExcluirM;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvarM;
    private javax.swing.JComboBox<String> jComboBoxEsp;
    private javax.swing.JFormattedTextField jFormattedCrm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableMedicos;
    private javax.swing.JTextField jTcod;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPesquisa;
    // End of variables declaration//GEN-END:variables
}
